// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 6 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
BuildScript: C:\Sandbox\Benchmark-dotnet\Benchmark-dotnet\bin\Release\net461\2cd0bb8e-7b2d-4cab-bde0-2542a688528f.bat
// ***** Done, took 00:00:02 (2.06 sec)   *****
// Found 6 benchmarks:
//   InstantiationBenchmarks.StandardReflectionWithInvoke: Job-GAGYKI(RunStrategy=Monitoring)
//   InstantiationBenchmarks.ActivatorCreateInstance: Job-GAGYKI(RunStrategy=Monitoring)
//   InstantiationBenchmarks.DirectInstantiation: Job-GAGYKI(RunStrategy=Monitoring)
//   InstantiationBenchmarks.CompiledExpressions: Job-GAGYKI(RunStrategy=Monitoring)
//   InstantiationBenchmarks.ReflectionEmitSeperateClass: Job-GAGYKI(RunStrategy=Monitoring)
//   InstantiationBenchmarks.ReflectionEmitClassConstructor: Job-GAGYKI(RunStrategy=Monitoring)

// **************************
// Benchmark: InstantiationBenchmarks.StandardReflectionWithInvoke: Job-GAGYKI(RunStrategy=Monitoring)
// *** Execute ***
// Launch: 1 / 1
// Execute: C:\Sandbox\Benchmark-dotnet\Benchmark-dotnet\bin\Release\net461\2cd0bb8e-7b2d-4cab-bde0-2542a688528f.exe --benchmarkName "InstantiationBenchmarks.StandardReflectionWithInvoke" --job "RunStrategy=Monitoring" --benchmarkId 0 in 
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Framework 4.8 (4.8.4420.0), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-GAGYKI(RunStrategy=Monitoring)

WorkloadWarmup   1: 1 op, 379000.00 ns, 379.0000 us/op

// BeforeActualRun
WorkloadActual   1: 1 op, 12400.00 ns, 12.4000 us/op
WorkloadActual   2: 1 op, 4700.00 ns, 4.7000 us/op
WorkloadActual   3: 1 op, 4400.00 ns, 4.4000 us/op
WorkloadActual   4: 1 op, 3400.00 ns, 3.4000 us/op
WorkloadActual   5: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadActual   6: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadActual   7: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadActual   8: 1 op, 2900.00 ns, 2.9000 us/op
WorkloadActual   9: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadActual  10: 1 op, 2900.00 ns, 2.9000 us/op

// AfterActualRun
WorkloadResult   1: 1 op, 12400.00 ns, 12.4000 us/op
WorkloadResult   2: 1 op, 4700.00 ns, 4.7000 us/op
WorkloadResult   3: 1 op, 4400.00 ns, 4.4000 us/op
WorkloadResult   4: 1 op, 3400.00 ns, 3.4000 us/op
WorkloadResult   5: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadResult   6: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadResult   7: 1 op, 3100.00 ns, 3.1000 us/op
WorkloadResult   8: 1 op, 2900.00 ns, 2.9000 us/op
WorkloadResult   9: 1 op, 3000.00 ns, 3.0000 us/op
WorkloadResult  10: 1 op, 2900.00 ns, 2.9000 us/op

// AfterAll
// Benchmark Process 4488 has exited with code 0.

Mean = 4.300 μs, StdErr = 0.922 μs (21.44%), N = 10, StdDev = 2.916 μs
Min = 2.900 μs, Q1 = 3.025 μs, Median = 3.100 μs, Q3 = 4.150 μs, Max = 12.400 μs
IQR = 1.125 μs, LowerFence = 1.338 μs, UpperFence = 5.838 μs
ConfidenceInterval = [-0.108 μs; 8.708 μs] (CI 99.9%), Margin = 4.408 μs (102.52% of Mean)
Skewness = 2.09, Kurtosis = 5.98, MValue = 2.57

// **************************
// Benchmark: InstantiationBenchmarks.ActivatorCreateInstance: Job-GAGYKI(RunStrategy=Monitoring)
// *** Execute ***
// Launch: 1 / 1
// Execute: C:\Sandbox\Benchmark-dotnet\Benchmark-dotnet\bin\Release\net461\2cd0bb8e-7b2d-4cab-bde0-2542a688528f.exe --benchmarkName "InstantiationBenchmarks.ActivatorCreateInstance" --job "RunStrategy=Monitoring" --benchmarkId 1 in 
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Framework 4.8 (4.8.4420.0), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-GAGYKI(RunStrategy=Monitoring)

WorkloadWarmup   1: 1 op, 350000.00 ns, 350.0000 us/op

// BeforeActualRun
WorkloadActual   1: 1 op, 87900.00 ns, 87.9000 us/op
WorkloadActual   2: 1 op, 22500.00 ns, 22.5000 us/op
WorkloadActual   3: 1 op, 3800.00 ns, 3.8000 us/op
WorkloadActual   4: 1 op, 6700.00 ns, 6.7000 us/op
WorkloadActual   5: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadActual   6: 1 op, 7600.00 ns, 7.6000 us/op
WorkloadActual   7: 1 op, 3500.00 ns, 3.5000 us/op
WorkloadActual   8: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadActual   9: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadActual  10: 1 op, 2800.00 ns, 2.8000 us/op

// AfterActualRun
WorkloadResult   1: 1 op, 87900.00 ns, 87.9000 us/op
WorkloadResult   2: 1 op, 22500.00 ns, 22.5000 us/op
WorkloadResult   3: 1 op, 3800.00 ns, 3.8000 us/op
WorkloadResult   4: 1 op, 6700.00 ns, 6.7000 us/op
WorkloadResult   5: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadResult   6: 1 op, 7600.00 ns, 7.6000 us/op
WorkloadResult   7: 1 op, 3500.00 ns, 3.5000 us/op
WorkloadResult   8: 1 op, 2600.00 ns, 2.6000 us/op
WorkloadResult   9: 1 op, 2700.00 ns, 2.7000 us/op
WorkloadResult  10: 1 op, 2800.00 ns, 2.8000 us/op

// AfterAll
// Benchmark Process 6916 has exited with code 0.

Mean = 14.280 μs, StdErr = 8.401 μs (58.83%), N = 10, StdDev = 26.566 μs
Min = 2.600 μs, Q1 = 2.725 μs, Median = 3.650 μs, Q3 = 7.375 μs, Max = 87.900 μs
IQR = 4.650 μs, LowerFence = -4.250 μs, UpperFence = 14.350 μs
ConfidenceInterval = [-25.885 μs; 54.445 μs] (CI 99.9%), Margin = 40.165 μs (281.27% of Mean)
Skewness = 2.08, Kurtosis = 5.92, MValue = 2.67

// **************************
// Benchmark: InstantiationBenchmarks.DirectInstantiation: Job-GAGYKI(RunStrategy=Monitoring)
// *** Execute ***
// Launch: 1 / 1
// Execute: C:\Sandbox\Benchmark-dotnet\Benchmark-dotnet\bin\Release\net461\2cd0bb8e-7b2d-4cab-bde0-2542a688528f.exe --benchmarkName "InstantiationBenchmarks.DirectInstantiation" --job "RunStrategy=Monitoring" --benchmarkId 2 in 
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Framework 4.8 (4.8.4420.0), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-GAGYKI(RunStrategy=Monitoring)

WorkloadWarmup   1: 1 op, 437700.00 ns, 437.7000 us/op

// BeforeActualRun
WorkloadActual   1: 1 op, 5400.00 ns, 5.4000 us/op
WorkloadActual   2: 1 op, 600.00 ns, 600.0000 ns/op
WorkloadActual   3: 1 op, 300.00 ns, 300.0000 ns/op
WorkloadActual   4: 1 op, 400.00 ns, 400.0000 ns/op
WorkloadActual   5: 1 op, 300.00 ns, 300.0000 ns/op
WorkloadActual   6: 1 op, 300.00 ns, 300.0000 ns/op
WorkloadActual   7: 1 op, 300.00 ns, 300.0000 ns/op
WorkloadActual   8: 1 op, 200.00 ns, 200.0000 ns/op
WorkloadActual   9: 1 op, 200.00 ns, 200.0000 ns/op
WorkloadActual  10: 1 op, 300.00 ns, 300.0000 ns/op

// AfterActualRun
WorkloadResult   1: 1 op, 5400.00 ns, 5.4000 us/op
WorkloadResult   2: 1 op, 600.00 ns, 600.0000 ns/op
WorkloadResult   3: 1 op, 300.00 ns, 300.0000 ns/op
WorkloadResult   4: 1 op, 400.00 ns, 400.0000 ns/op
WorkloadResult   5: 1 op, 300.00 ns, 300.0000 ns/op
WorkloadResult   6: 1 op, 300.00 ns, 300.0000 ns/op
WorkloadResult   7: 1 op, 300.00 ns, 300.0000 ns/op
WorkloadResult   8: 1 op, 200.00 ns, 200.0000 ns/op
WorkloadResult   9: 1 op, 200.00 ns, 200.0000 ns/op
WorkloadResult  10: 1 op, 300.00 ns, 300.0000 ns/op

// AfterAll
// Benchmark Process 17668 has exited with code 0.

Mean = 830.000 ns, StdErr = 509.040 ns (61.33%), N = 10, StdDev = 1,609.727 ns
Min = 200.000 ns, Q1 = 300.000 ns, Median = 300.000 ns, Q3 = 375.000 ns, Max = 5,400.000 ns
IQR = 75.000 ns, LowerFence = 187.500 ns, UpperFence = 487.500 ns
ConfidenceInterval = [-1,603.678 ns; 3,263.678 ns] (CI 99.9%), Margin = 2,433.678 ns (293.21% of Mean)
Skewness = 2.26, Kurtosis = 6.51, MValue = 2

// **************************
// Benchmark: InstantiationBenchmarks.CompiledExpressions: Job-GAGYKI(RunStrategy=Monitoring)
// *** Execute ***
// Launch: 1 / 1
// Execute: C:\Sandbox\Benchmark-dotnet\Benchmark-dotnet\bin\Release\net461\2cd0bb8e-7b2d-4cab-bde0-2542a688528f.exe --benchmarkName "InstantiationBenchmarks.CompiledExpressions" --job "RunStrategy=Monitoring" --benchmarkId 3 in 
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Framework 4.8 (4.8.4420.0), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-GAGYKI(RunStrategy=Monitoring)

WorkloadWarmup   1: 1 op, 657100.00 ns, 657.1000 us/op

// BeforeActualRun
WorkloadActual   1: 1 op, 195100.00 ns, 195.1000 us/op
WorkloadActual   2: 1 op, 153800.00 ns, 153.8000 us/op
WorkloadActual   3: 1 op, 193000.00 ns, 193.0000 us/op
WorkloadActual   4: 1 op, 157700.00 ns, 157.7000 us/op
WorkloadActual   5: 1 op, 145100.00 ns, 145.1000 us/op
WorkloadActual   6: 1 op, 139700.00 ns, 139.7000 us/op
WorkloadActual   7: 1 op, 150700.00 ns, 150.7000 us/op
WorkloadActual   8: 1 op, 159600.00 ns, 159.6000 us/op
WorkloadActual   9: 1 op, 142200.00 ns, 142.2000 us/op
WorkloadActual  10: 1 op, 139000.00 ns, 139.0000 us/op

// AfterActualRun
WorkloadResult   1: 1 op, 195100.00 ns, 195.1000 us/op
WorkloadResult   2: 1 op, 153800.00 ns, 153.8000 us/op
WorkloadResult   3: 1 op, 193000.00 ns, 193.0000 us/op
WorkloadResult   4: 1 op, 157700.00 ns, 157.7000 us/op
WorkloadResult   5: 1 op, 145100.00 ns, 145.1000 us/op
WorkloadResult   6: 1 op, 139700.00 ns, 139.7000 us/op
WorkloadResult   7: 1 op, 150700.00 ns, 150.7000 us/op
WorkloadResult   8: 1 op, 159600.00 ns, 159.6000 us/op
WorkloadResult   9: 1 op, 142200.00 ns, 142.2000 us/op
WorkloadResult  10: 1 op, 139000.00 ns, 139.0000 us/op

// AfterAll
// Benchmark Process 12640 has exited with code 0.

Mean = 157.590 μs, StdErr = 6.485 μs (4.12%), N = 10, StdDev = 20.508 μs
Min = 139.000 μs, Q1 = 142.925 μs, Median = 152.250 μs, Q3 = 159.125 μs, Max = 195.100 μs
IQR = 16.200 μs, LowerFence = 118.625 μs, UpperFence = 183.425 μs
ConfidenceInterval = [126.585 μs; 188.595 μs] (CI 99.9%), Margin = 31.005 μs (19.67% of Mean)
Skewness = 0.92, Kurtosis = 2.18, MValue = 2

// **************************
// Benchmark: InstantiationBenchmarks.ReflectionEmitSeperateClass: Job-GAGYKI(RunStrategy=Monitoring)
// *** Execute ***
// Launch: 1 / 1
// Execute: C:\Sandbox\Benchmark-dotnet\Benchmark-dotnet\bin\Release\net461\2cd0bb8e-7b2d-4cab-bde0-2542a688528f.exe --benchmarkName "InstantiationBenchmarks.ReflectionEmitSeperateClass" --job "RunStrategy=Monitoring" --benchmarkId 4 in 
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Framework 4.8 (4.8.4420.0), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-GAGYKI(RunStrategy=Monitoring)

WorkloadWarmup   1: 1 op, 808100.00 ns, 808.1000 us/op

// BeforeActualRun
WorkloadActual   1: 1 op, 167700.00 ns, 167.7000 us/op
WorkloadActual   2: 1 op, 158400.00 ns, 158.4000 us/op
WorkloadActual   3: 1 op, 144000.00 ns, 144.0000 us/op
WorkloadActual   4: 1 op, 165000.00 ns, 165.0000 us/op
WorkloadActual   5: 1 op, 138600.00 ns, 138.6000 us/op
WorkloadActual   6: 1 op, 141900.00 ns, 141.9000 us/op
WorkloadActual   7: 1 op, 160400.00 ns, 160.4000 us/op
WorkloadActual   8: 1 op, 135600.00 ns, 135.6000 us/op
WorkloadActual   9: 1 op, 157500.00 ns, 157.5000 us/op
WorkloadActual  10: 1 op, 137200.00 ns, 137.2000 us/op

// AfterActualRun
WorkloadResult   1: 1 op, 167700.00 ns, 167.7000 us/op
WorkloadResult   2: 1 op, 158400.00 ns, 158.4000 us/op
WorkloadResult   3: 1 op, 144000.00 ns, 144.0000 us/op
WorkloadResult   4: 1 op, 165000.00 ns, 165.0000 us/op
WorkloadResult   5: 1 op, 138600.00 ns, 138.6000 us/op
WorkloadResult   6: 1 op, 141900.00 ns, 141.9000 us/op
WorkloadResult   7: 1 op, 160400.00 ns, 160.4000 us/op
WorkloadResult   8: 1 op, 135600.00 ns, 135.6000 us/op
WorkloadResult   9: 1 op, 157500.00 ns, 157.5000 us/op
WorkloadResult  10: 1 op, 137200.00 ns, 137.2000 us/op

// AfterAll
// Benchmark Process 5152 has exited with code 0.

Mean = 150.630 μs, StdErr = 3.905 μs (2.59%), N = 10, StdDev = 12.347 μs
Min = 135.600 μs, Q1 = 139.425 μs, Median = 150.750 μs, Q3 = 159.900 μs, Max = 167.700 μs
IQR = 20.475 μs, LowerFence = 108.713 μs, UpperFence = 190.613 μs
ConfidenceInterval = [131.963 μs; 169.297 μs] (CI 99.9%), Margin = 18.667 μs (12.39% of Mean)
Skewness = 0.06, Kurtosis = 1.1, MValue = 4

// **************************
// Benchmark: InstantiationBenchmarks.ReflectionEmitClassConstructor: Job-GAGYKI(RunStrategy=Monitoring)
// *** Execute ***
// Launch: 1 / 1
// Execute: C:\Sandbox\Benchmark-dotnet\Benchmark-dotnet\bin\Release\net461\2cd0bb8e-7b2d-4cab-bde0-2542a688528f.exe --benchmarkName "InstantiationBenchmarks.ReflectionEmitClassConstructor" --job "RunStrategy=Monitoring" --benchmarkId 5 in 
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET Framework 4.8 (4.8.4420.0), X64 RyuJIT
// GC=Concurrent Workstation
// Job: Job-GAGYKI(RunStrategy=Monitoring)

WorkloadWarmup   1: 1 op, 323200.00 ns, 323.2000 us/op

// BeforeActualRun
WorkloadActual   1: 1 op, 3800.00 ns, 3.8000 us/op
WorkloadActual   2: 1 op, 700.00 ns, 700.0000 ns/op
WorkloadActual   3: 1 op, 7600.00 ns, 7.6000 us/op
WorkloadActual   4: 1 op, 600.00 ns, 600.0000 ns/op
WorkloadActual   5: 1 op, 400.00 ns, 400.0000 ns/op
WorkloadActual   6: 1 op, 1100.00 ns, 1.1000 us/op
WorkloadActual   7: 1 op, 400.00 ns, 400.0000 ns/op
WorkloadActual   8: 1 op, 300.00 ns, 300.0000 ns/op
WorkloadActual   9: 1 op, 300.00 ns, 300.0000 ns/op
WorkloadActual  10: 1 op, 600.00 ns, 600.0000 ns/op

// AfterActualRun
WorkloadResult   1: 1 op, 3800.00 ns, 3.8000 us/op
WorkloadResult   2: 1 op, 700.00 ns, 700.0000 ns/op
WorkloadResult   3: 1 op, 7600.00 ns, 7.6000 us/op
WorkloadResult   4: 1 op, 600.00 ns, 600.0000 ns/op
WorkloadResult   5: 1 op, 400.00 ns, 400.0000 ns/op
WorkloadResult   6: 1 op, 1100.00 ns, 1.1000 us/op
WorkloadResult   7: 1 op, 400.00 ns, 400.0000 ns/op
WorkloadResult   8: 1 op, 300.00 ns, 300.0000 ns/op
WorkloadResult   9: 1 op, 300.00 ns, 300.0000 ns/op
WorkloadResult  10: 1 op, 600.00 ns, 600.0000 ns/op

// AfterAll
// Benchmark Process 8740 has exited with code 0.

Mean = 1.580 μs, StdErr = 0.747 μs (47.25%), N = 10, StdDev = 2.361 μs
Min = 0.300 μs, Q1 = 0.400 μs, Median = 0.600 μs, Q3 = 1.000 μs, Max = 7.600 μs
IQR = 0.600 μs, LowerFence = -0.500 μs, UpperFence = 1.900 μs
ConfidenceInterval = [-1.989 μs; 5.149 μs] (CI 99.9%), Margin = 3.569 μs (225.89% of Mean)
Skewness = 1.66, Kurtosis = 4.34, MValue = 2

// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\InstantiationBenchmarks-report.csv
  BenchmarkDotNet.Artifacts\results\InstantiationBenchmarks-report-github.md
  BenchmarkDotNet.Artifacts\results\InstantiationBenchmarks-report.html

// * Detailed results *
InstantiationBenchmarks.DirectInstantiation: Job-GAGYKI(RunStrategy=Monitoring)
Runtime = .NET Framework 4.8 (4.8.4420.0), X64 RyuJIT; GC = Concurrent Workstation
Mean = 830.000 ns, StdErr = 509.040 ns (61.33%), N = 10, StdDev = 1,609.727 ns
Min = 200.000 ns, Q1 = 300.000 ns, Median = 300.000 ns, Q3 = 375.000 ns, Max = 5,400.000 ns
IQR = 75.000 ns, LowerFence = 187.500 ns, UpperFence = 487.500 ns
ConfidenceInterval = [-1,603.678 ns; 3,263.678 ns] (CI 99.9%), Margin = 2,433.678 ns (293.21% of Mean)
Skewness = 2.26, Kurtosis = 6.51, MValue = 2
-------------------- Histogram --------------------
[ -580.660 ns ; 1,380.660 ns) | @@@@@@@@@
[1,380.660 ns ; 3,341.979 ns) | 
[3,341.979 ns ; 4,419.340 ns) | 
[4,419.340 ns ; 6,380.660 ns) | @
---------------------------------------------------

InstantiationBenchmarks.ReflectionEmitClassConstructor: Job-GAGYKI(RunStrategy=Monitoring)
Runtime = .NET Framework 4.8 (4.8.4420.0), X64 RyuJIT; GC = Concurrent Workstation
Mean = 1.580 μs, StdErr = 0.747 μs (47.25%), N = 10, StdDev = 2.361 μs
Min = 0.300 μs, Q1 = 0.400 μs, Median = 0.600 μs, Q3 = 1.000 μs, Max = 7.600 μs
IQR = 0.600 μs, LowerFence = -0.500 μs, UpperFence = 1.900 μs
ConfidenceInterval = [-1.989 μs; 5.149 μs] (CI 99.9%), Margin = 3.569 μs (225.89% of Mean)
Skewness = 1.66, Kurtosis = 4.34, MValue = 2
-------------------- Histogram --------------------
[-0.738 μs ; 2.138 μs) | @@@@@@@@
[ 2.138 μs ; 5.238 μs) | @
[ 5.238 μs ; 9.038 μs) | @
---------------------------------------------------

InstantiationBenchmarks.StandardReflectionWithInvoke: Job-GAGYKI(RunStrategy=Monitoring)
Runtime = .NET Framework 4.8 (4.8.4420.0), X64 RyuJIT; GC = Concurrent Workstation
Mean = 4.300 μs, StdErr = 0.922 μs (21.44%), N = 10, StdDev = 2.916 μs
Min = 2.900 μs, Q1 = 3.025 μs, Median = 3.100 μs, Q3 = 4.150 μs, Max = 12.400 μs
IQR = 1.125 μs, LowerFence = 1.338 μs, UpperFence = 5.838 μs
ConfidenceInterval = [-0.108 μs; 8.708 μs] (CI 99.9%), Margin = 4.408 μs (102.52% of Mean)
Skewness = 2.09, Kurtosis = 5.98, MValue = 2.57
-------------------- Histogram --------------------
[ 2.024 μs ;  5.576 μs) | @@@@@@@@@
[ 5.576 μs ;  9.129 μs) | 
[ 9.129 μs ; 10.624 μs) | 
[10.624 μs ; 14.176 μs) | @
---------------------------------------------------

InstantiationBenchmarks.ActivatorCreateInstance: Job-GAGYKI(RunStrategy=Monitoring)
Runtime = .NET Framework 4.8 (4.8.4420.0), X64 RyuJIT; GC = Concurrent Workstation
Mean = 14.280 μs, StdErr = 8.401 μs (58.83%), N = 10, StdDev = 26.566 μs
Min = 2.600 μs, Q1 = 2.725 μs, Median = 3.650 μs, Q3 = 7.375 μs, Max = 87.900 μs
IQR = 4.650 μs, LowerFence = -4.250 μs, UpperFence = 14.350 μs
ConfidenceInterval = [-25.885 μs; 54.445 μs] (CI 99.9%), Margin = 40.165 μs (281.27% of Mean)
Skewness = 2.08, Kurtosis = 5.92, MValue = 2.67
-------------------- Histogram --------------------
[-3.635 μs ;  28.735 μs) | @@@@@@@@@
[28.735 μs ;  71.715 μs) | 
[71.715 μs ; 104.085 μs) | @
---------------------------------------------------

InstantiationBenchmarks.ReflectionEmitSeperateClass: Job-GAGYKI(RunStrategy=Monitoring)
Runtime = .NET Framework 4.8 (4.8.4420.0), X64 RyuJIT; GC = Concurrent Workstation
Mean = 150.630 μs, StdErr = 3.905 μs (2.59%), N = 10, StdDev = 12.347 μs
Min = 135.600 μs, Q1 = 139.425 μs, Median = 150.750 μs, Q3 = 159.900 μs, Max = 167.700 μs
IQR = 20.475 μs, LowerFence = 108.713 μs, UpperFence = 190.613 μs
ConfidenceInterval = [131.963 μs; 169.297 μs] (CI 99.9%), Margin = 18.667 μs (12.39% of Mean)
Skewness = 0.06, Kurtosis = 1.1, MValue = 4
-------------------- Histogram --------------------
[132.278 μs ; 147.322 μs) | @@@@@
[147.322 μs ; 155.078 μs) | 
[155.078 μs ; 170.122 μs) | @@@@@
---------------------------------------------------

InstantiationBenchmarks.CompiledExpressions: Job-GAGYKI(RunStrategy=Monitoring)
Runtime = .NET Framework 4.8 (4.8.4420.0), X64 RyuJIT; GC = Concurrent Workstation
Mean = 157.590 μs, StdErr = 6.485 μs (4.12%), N = 10, StdDev = 20.508 μs
Min = 139.000 μs, Q1 = 142.925 μs, Median = 152.250 μs, Q3 = 159.125 μs, Max = 195.100 μs
IQR = 16.200 μs, LowerFence = 118.625 μs, UpperFence = 183.425 μs
ConfidenceInterval = [126.585 μs; 188.595 μs] (CI 99.9%), Margin = 31.005 μs (19.67% of Mean)
Skewness = 0.92, Kurtosis = 2.18, MValue = 2
-------------------- Histogram --------------------
[136.806 μs ; 161.794 μs) | @@@@@@@@
[161.794 μs ; 181.556 μs) | 
[181.556 μs ; 207.594 μs) | @@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.13.1, OS=Windows 10.0.19044.1586 (21H2)
11th Gen Intel Core i9-11950H 2.60GHz, 1 CPU, 16 logical and 8 physical cores
  [Host]     : .NET Framework 4.8 (4.8.4420.0), X64 RyuJIT
  Job-GAGYKI : .NET Framework 4.8 (4.8.4420.0), X64 RyuJIT

RunStrategy=Monitoring  

|                         Method |         Mean |       Error |      StdDev |       Median | Rank |
|------------------------------- |-------------:|------------:|------------:|-------------:|-----:|
|            DirectInstantiation |     830.0 ns |  2,433.7 ns |  1,609.7 ns |     300.0 ns |    * |
| ReflectionEmitClassConstructor |   1,580.0 ns |  3,569.0 ns |  2,360.7 ns |     600.0 ns |    * |
|   StandardReflectionWithInvoke |   4,300.0 ns |  4,408.4 ns |  2,915.9 ns |   3,100.0 ns |   ** |
|        ActivatorCreateInstance |  14,280.0 ns | 40,164.7 ns | 26,566.5 ns |   3,650.0 ns |   ** |
|    ReflectionEmitSeperateClass | 150,630.0 ns | 18,667.1 ns | 12,347.1 ns | 150,750.0 ns |  *** |
|            CompiledExpressions | 157,590.0 ns | 31,005.4 ns | 20,508.1 ns | 152,250.0 ns |  *** |

// * Warnings *
MinIterationTime
  InstantiationBenchmarks.DirectInstantiation: RunStrategy=Monitoring            -> The minimum observed iteration time is 200.0000 ns which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  InstantiationBenchmarks.ReflectionEmitClassConstructor: RunStrategy=Monitoring -> The minimum observed iteration time is 300.0000 ns which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  InstantiationBenchmarks.StandardReflectionWithInvoke: RunStrategy=Monitoring   -> The minimum observed iteration time is 2.9000 μs which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  InstantiationBenchmarks.ActivatorCreateInstance: RunStrategy=Monitoring        -> The minimum observed iteration time is 2.6000 μs which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  InstantiationBenchmarks.ReflectionEmitSeperateClass: RunStrategy=Monitoring    -> The minimum observed iteration time is 135.6000 μs which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  InstantiationBenchmarks.CompiledExpressions: RunStrategy=Monitoring            -> The minimum observed iteration time is 139.0000 μs which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.

// * Hints *
Outliers
  InstantiationBenchmarks.DirectInstantiation: RunStrategy=Monitoring            -> 2 outliers were detected (600.00 ns, 5.40 μs)
  InstantiationBenchmarks.ReflectionEmitClassConstructor: RunStrategy=Monitoring -> 2 outliers were detected (3.80 μs, 7.60 μs)
  InstantiationBenchmarks.StandardReflectionWithInvoke: RunStrategy=Monitoring   -> 1 outlier  was  detected (12.40 μs)
  InstantiationBenchmarks.ActivatorCreateInstance: RunStrategy=Monitoring        -> 2 outliers were detected (22.50 μs, 87.90 μs)
  InstantiationBenchmarks.CompiledExpressions: RunStrategy=Monitoring            -> 2 outliers were detected (193.00 μs, 195.10 μs)

// * Legends *
  Mean   : Arithmetic mean of all measurements
  Error  : Half of 99.9% confidence interval
  StdDev : Standard deviation of all measurements
  Median : Value separating the higher half of all measurements (50th percentile)
  Rank   : Relative position of current benchmark mean among all benchmarks (Stars style)
  1 ns   : 1 Nanosecond (0.000000001 sec)

// ***** BenchmarkRunner: End *****
// ** Remained 0 benchmark(s) to run **
Run time: 00:00:02 (2.53 sec), executed benchmarks: 6

Global total time: 00:00:04 (4.59 sec), executed benchmarks: 6
// * Artifacts cleanup *
